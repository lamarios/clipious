kind: pipeline
type: docker
name: Android app

steps:
  - name: test
    image: ghcr.io/cirruslabs/flutter:stable
    environment:
      ANDROID_KEY_FILE: /tmp/key.properties
      SERVER_URL:
        from_secret: server_url
    commands:
      - git submodule init
      - git submodule update
      - ./submodules/flutter/bin/flutter run test
  - name: build app
    image: ghcr.io/cirruslabs/flutter:stable
    environment:
      ANDROID_KEY_FILE: /tmp/key.properties
      SERVER_URL:
        from_secret: server_url
    commands:
      - wget http://$SERVER_URL/service-account.json -O /tmp/service-account.json
      - wget http://$SERVER_URL/key.properties -O /tmp/key.properties
      - wget http://$SERVER_URL/keystore.jks -O /tmp/keystore.jks
      - cd ..
      - cp -R src /tmp/build
      - cd /tmp/build
      - git submodule init
      - git submodule update
      - export PUB_CACHE=$(pwd)/.pub-cache
      - ./submodules/flutter/bin/flutter doctor
      - ./submodules/flutter/bin/flutter config --no-analytics
      - ./submodules/flutter/bin/flutter pub get
      - ./submodules/flutter/bin/flutter pub run flutter_native_splash:create
      - ./submodules/flutter/bin/flutter build apk --split-per-abi
      - ./submodules/flutter/bin/flutter build apk
      - ./submodules/flutter/bin/flutter build appbundle
      - cd /drone/src/
      - mkdir -p build/app/outputs/flutter-apk
      - mkdir -p build/app/outputs/bundle/release
      - cp /tmp/build/build/app/outputs/flutter-apk/* build/app/outputs/flutter-apk/
      - cp /tmp/build/build/app/outputs/bundle/release/* build/app/outputs/bundle/release/
      - ls build/app/outputs/flutter-apk/
      - ls build/app/outputs/bundle/release/
  - name: Accrescent APKs
    image: mingc/android-build-box
    environment:
      ANDROID_KEY_FILE: /tmp/key.properties
      SERVER_URL:
        from_secret: server_url
    commands:
      - wget http://$SERVER_URL/service-account.json -O /tmp/service-account.json
      - wget http://$SERVER_URL/key.properties -O /tmp/key.properties
      - wget http://$SERVER_URL/keystore.jks -O /tmp/keystore.jks
      - . /tmp/key.properties
      - cd build/app/outputs/bundle/release/
      - java -jar /opt/android-sdk/cmdline-tools/latest/bundletool.jar build-apks --bundle=app-release.aab --output=app-release.apks --ks-pass=pass:$${storePassword} --ks=/tmp/keystore.jks --ks-key-alias=upload --key-pass=pass:$${keyPassword}
    when:
      event: tag
  - name: publish
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - "build/app/outputs/flutter-apk/*"
        - "build/app/outputs/bundle/release/*"
    when:
      event: tag

#- name: Release Android
#    image: ruby
#    environment:
#      JSON_KEY_FILE: /tmp/service-account.json
#      SERVER_URL:
#       from_secret: server_url
#     commands:
#       - wget http://$SERVER_URL/service-account.json -O /tmp/service-account.json
#       - wget http://$SERVER_URL/key.properties -O /tmp/key.properties
#       - wget http://$SERVER_URL/keystore.jks -O /tmp/keystore.jks
#       - cd android
#       - gem install fastlane
#       - fastlane deploy
#     when:
#       event: tag
# trigger:
#   event:
#     - push
#     - tag
